{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","App.module.css"],"names":["module","exports","Cards","props","console","log","data","confirmed","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","lastUpdate","toDateString","recovered","deaths","url","fetchData","country","a","changeableURL","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","c","fetchedData","setState","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d39fd1c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport Countup from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\n\nconst Cards = (props) => {\n    console.log(props);\n    if(!props.data.confirmed){\n        return \"Loading...\";\n    }\n    \n    // console.log(props.data.confirmed);\n    // console.log();\n\n    return(\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12}  md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <Countup\n                            start={0}\n                            end={props.data.confirmed.value}\n                            duration={2.5}\n                            separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(props.data.lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n\n                <Grid item component={Card} xs={12}  md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                        <Typography variant=\"h5\">\n                            <Countup\n                            start={0}\n                            end={props.data.recovered.value}\n                            duration={2.5}\n                            separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(props.data.lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of recoveries of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n\n                <Grid item component={Card} xs={12}  md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\">\n                            <Countup\n                            start={0}\n                            end={props.data.deaths.value}\n                            duration={2.5}\n                            separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(props.data.lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n\n        </div>\n\n    );\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n    let changeableURL = url;\n    if(country){\n        changeableURL = `${url}/countries/${country}`;\n    }\n    try {\n        const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableURL);\n\n\n        return {confirmed, recovered, deaths, lastUpdate};\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchDailyData = async () => {\n    try {\n        const {data} = await axios.get(`${url}/daily`);\n        \n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate,\n        }));\n\n\n        return modifiedData;\n    } catch (error) {\n        console.log(error);\n        \n    }\n}\n\nexport const countries = async () => {\n    try {\n        const {data} = await axios.get(`${url}/countries`);\n\n        const modifiedData = data.countries.map((country) => {\n            return country.name;\n        });\n        // console.log(modifiedData);\n\n        return modifiedData;\n\n        \n    } catch (error) {\n        console.log(error);\n    }\n}","import React, {useState, useEffect} from 'react';\n\nimport {fetchDailyData} from '../../api';\nimport {Line, Bar} from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({data:{confirmed,recovered,deaths},country}) => {\n\n    const [dailyData,setDailyData] = useState([]);\n\n\n    useEffect(()=>{\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());            \n        }\n        \n        fetchAPI();\n\n    },[]);\n\n    \n\n    const lineChart = (\n        dailyData.length !== 0 ?\n        <Line\n            data={{\n                labels: dailyData.map(({date})=>date),\n                datasets:[\n                {   data: dailyData.map(({confirmed})=>confirmed),\n                    label: 'Infected',\n                    borderColor: '#3333ff',\n                    fill: true,\n                },\n                {   data: dailyData.map(({deaths})=>deaths),\n                    label: 'Infected',\n                    borderColor: '#red',\n                    backgroundColor: 'rgba(255, 0, 0,0.5)',\n                    fill: true,\n                }\n                ],\n            }}\n        /> : 'Loading Line Chart...'\n    );\n\n    const barChart = (\n        confirmed ?\n        <Bar\n            data={{\n                labels: ['Infected','Recovered','Deaths'],\n                datasets: [{\n                    label: 'People',\n                    backgroundColor: ['rgba(0, 0, 255, 0.8)','rgba(0, 255, 0, 0.8)','rgba(255, 0, 0, 0.8)'],\n                    data: [confirmed.value, recovered.value, deaths.value]\n                }]\n            }}\n            options={{\n                legend:{display:false},\n                title:{display:true, text:`Current state in ${country}`},\n\n            }}\n        \n        /> : 'Loading Bar Chart...'\n    )\n\n    return(\n        <div className={styles.container}>\n        \n        {country ? barChart : lineChart}\n        </div>\n    );\n}\n\nexport default Chart;","import React, {useState, useEffect} from 'react';\n\nimport {NativeSelect, FormControl} from '@material-ui/core'\n\nimport styles from './CountryPicker.module.css';\n\n\nimport {countries, fetchDailyData} from '../../api';\n\n\nconst CountryPicker = ({handleCountryChange}) => {\n\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n    useEffect(() =>{\n        const fetchCountries = async () =>{\n            setFetchedCountries(await countries());\n        }\n        console.log(\"Getting Countries...\")\n        fetchCountries();\n        \n        // fetchCountries();\n    },[setFetchedCountries]);\n\n    return(\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e)=>{\n                handleCountryChange(e.target.value)\n            }}>\n                <option value=\"global\">Global</option>\n                {fetchedCountries.map((country,i) => {\n                    return <option key={i} value={country}>{country}</option>\n                })}\n            </NativeSelect>\n            \n        </FormControl>\n    );\n}\n\nexport default CountryPicker;","import React from 'react';\n\nimport { Cards,Chart,CountryPicker } from './components'\nimport styles from './App.module.css';\n\nimport { fetchData } from './api';\n\nclass App extends React.Component {\n\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount (){\n    const fetchedData = await fetchData();\n    console.log(fetchedData);\n    this.setState({data: fetchedData});\n  }\n\n  handleCountryChange = async (c) => {\n    console.log(c);\n    //fetch data\n    if(c === 'global'){\n      c='';\n    }\n    const fetchedData = await fetchData(c);\n    //set state\n    console.log(fetchedData);\n    this.setState({data: fetchedData, country: c});\n\n  }\n\n  render () {\n    return (\n      <div className = {styles.container}>\n        <Cards data={this.state.data} country={this.state.country}/>\n        <CountryPicker handleCountryChange={this.handleCountryChange}/>\n        <Chart data={this.state.data} country={this.state.country}/>\n  \n      </div>\n    );\n\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};"],"sourceRoot":""}